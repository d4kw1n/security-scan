name: Perplexity PR Review Agent

on:
  repository_dispatch:
    types: [perplexity_review]

jobs:
  review:
    name: Analyze Vulnerabilities with Perplexity
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Vulnerabilities Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.client_payload.artifact_name }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Analyze Vulnerabilities with Perplexity
        env:
          PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Read vulnerabilities from artifact
          vulnerabilities=$(cat artifact.json | jq '.vulnerabilities')
          if [ -z "$vulnerabilities" ] || [ "$vulnerabilities" = "[]" ]; then
            echo "No vulnerabilities to analyze."
            exit 0
          fi

          # Initialize comment
          comment="📊 **Perplexity PR Review Agent Report**\n\n"
          comment+="Detailed analysis of vulnerabilities detected by SonarCloud:\n"

          # Loop through each vulnerability
          echo "$vulnerabilities" | jq -r '.[] | @base64' | while read -r vuln_base64; do
            vuln=$(echo "$vuln_base64" | base64 --decode)
            rule=$(echo "$vuln" | jq -r '.rule')
            message=$(echo "$vuln" | jq -r '.message')
            severity=$(echo "$vuln" | jq -r '.severity')
            file=$(echo "$vuln" | jq -r '.component')
            line=$(echo "$vuln" | jq -r '.line // "N/A"')

            # Create query for Perplexity API
            query="Analyze the following code vulnerability from SonarCloud and provide a detailed explanation, including why it is a security issue, potential impact, and recommended fixes:\n\n- Rule: $rule\n- Message: $message\n- Severity: $severity\n- File: $file\n- Line: $line"

            # Call Perplexity API
            response=$(curl -s -X POST \
              -H "Authorization: Bearer $PERPLEXITY_API_KEY" \
              -H "Content-Type: application/json" \
              https://api.perplexity.ai/chat/completions \
              -d "{\"model\":\"llama-3.1-sonar-large-70b-online\",\"messages\":[{\"role\":\"user\",\"content\":\"$query\"}]}")

            # Extract Perplexity response
            analysis=$(echo "$response" | jq -r '.choices[0].message.content // "Failed to get analysis from Perplexity."')
            if [ "$analysis" = "Failed to get analysis from Perplexity." ]; then
              echo "❌ Failed to get analysis for vulnerability: $rule"
              comment+="\n- **$rule**: $message\n  - Severity: $severity, File: $file, Line: $line\n  - Analysis: Failed to retrieve detailed analysis from Perplexity.\n"
            else
              comment+="\n- **$rule**: $message\n  - Severity: $severity, File: $file, Line: $line\n  - Analysis:\n    $analysis\n"
            fi
          done

          comment+="\nPlease review the analysis and address the issues. See [SonarCloud Dashboard](https://sonarcloud.io/project/issues?id=d4kw1n_security-scan&pullRequest=${{ github.event.client_payload.pr_number }}) for details."

          # Post comment to PR
          echo -e "$comment" > comment.md
          gh pr comment ${{ github.event.client_payload.pr_number }} --body-file comment.md