name: SonarQube Cloud Scan

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      # Bước 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Bước 2: Cài đặt Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # Bước 3: Cài đặt Slither
      - name: Install Slither
        run: |
          pip install slither-analyzer
          pip install solc-select
          solc-select install 0.8.20
          solc-select use 0.8.20

      # Bước 4: Chạy phân tích Slither
      - name: Run Slither Analysis
        run: |
          slither . --exclude-low --exclude-informational \
            --checklist \
            --filter-paths "test|mocks" \
            --json slither-report.json
        continue-on-error: true

      # Bước 5: Tải lên báo cáo Slither
      - name: Upload Slither Report
        uses: actions/upload-artifact@v4
        with:
          name: slither-report
          path: slither-report.json

      # Bước 6: Bình luận kết quả vào PR
      - name: Comment PR with Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('slither-report.json', 'utf8'));
            
            let comment = '## Slither Security Scan Results\n\n';
            if (report.success && report.results.detectors.length === 0) {
              comment += '✅ No security issues found!';
            } else {
              comment += '⚠️ Potential security issues detected:\n';
              report.results.detectors.forEach(detector => {
                comment += `- ${detector.description}\n  - Impact: ${detector.impact}\n  - Confidence: ${detector.confidence}\n`;
              });
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });